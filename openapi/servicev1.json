{
  "openapi": "3.0.0",
  "info": {
    "title": "ZeroTierOne Service API",
    "version": "0.1.0",
    "description": "<p> This API controls the ZeroTier service that runs in the background on your computer. This is how zerotier-cli, and the macOS and Windows apps control the service. </p> <p> API requests must be authenticated via an authentication token. ZeroTier One saves this token in the authtoken.secret file in its working directory. This token may be supplied via the X-ZT1-Auth HTTP request header. </p> <p> For example: <code>curl -H \"X-ZT1-Auth: $TOKEN\" http://localhost:9993/status</code> </p> <p> The token can be found in: <ul> <li>Mac :: /Library/Application Support/ZeroTier/One</li> <li>Windows :: \\ProgramData\\ZeroTier\\One</li> <li>Linux :: /var/lib/zerotier-one</li> </ul> </p> ",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:9993",
      "description": "Production Server"
    }
  ],
  "tags": [
    {
      "name": "status",
      "description": "status"
    },
    {
      "name": "network",
      "description": "settings and status of a joined network"
    },
    {
      "name": "peer",
      "description": "peer status"
    }
  ],
  "paths": {
    "/status": {
      "get": {
        "tags": ["status"],
        "summary": "Node status and addressing info.",
        "operationId": "getStatus",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/network": {
      "get": {
        "tags": ["network"],
        "summary": "Get all network memberships.",
        "operationId": "getNetworks",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Network"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/network/{networkID}": {
      "get": {
        "tags": ["network"],
        "summary": "Gets a joined Network by ID.",
        "operationId": "getNetwork",
        "parameters": [
          {
            "name": "networkID",
            "description": "ID of the network to change",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "tags": ["network"],
        "summary": "Join a network or update it's configuration",
        "operationId": "updateNetwork",
        "parameters": [
          {
            "name": "networkID",
            "description": "ID of the network to change",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Network object JSON",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Network"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "tags": ["network"],
        "summary": "Leave a network",
        "operationId": "deleteNetwork",
        "parameters": [
          {
            "name": "networkID",
            "description": "ID of the network",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "network deleted"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/peer": {
      "get": {
        "tags": ["peer"],
        "summary": "Get all peers.",
        "operationId": "getPeers",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Peer"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/peer/{address}": {
      "get": {
        "tags": ["peer"],
        "summary": "Get information about a specific peer.",
        "operationId": "getPeer",
        "parameters": [
          {
            "name": "address",
            "description": "ZeroTier address of the peer",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Peer"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-ZT1-Auth"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Authorization required"
      }
    },
    "schemas": {
      "Status": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "0deadbeef0"
          },
          "clock": {
            "type": "integer",
            "example": "1618948931097"
          },
          "config": {
            "type": "object",
            "properties": {
              "settings": {
                "type": "object",
                "properties": {
                  "allowTcpFallbackRelay": {
                    "type": "boolean"
                  },
                  "portMappingEnabled": {
                    "type": "boolean"
                  },
                  "primaryPort": {
                    "type": "integer",
                    "example": "9993"
                  }
                }
              }
            }
          },
          "online": {
            "type": "boolean"
          },
          "planetWorldId": {
            "type": "number",
            "example": "149604618"
          },
          "planetWorldTimestamp": {
            "type": "number",
            "example": "1618339625163"
          },
          "publicIdentity": {
            "type": "string",
            "example": "33c799cb58:0:690b44091ec50a44eb7f7769354b49abb47ac8747d99d547a1ec8c4d47623c5a6e3927f29b8d8443aebebc9ba4d4a812bd8902d71318db34b89d00186e8f4e4e"
          },
          "tcpFallbackActive": {
            "type": "boolean"
          },
          "version": {
            "type": "string",
            "example": "1.6.4"
          },
          "versionBuild": {
            "type": "integer",
            "example": "0"
          },
          "versionMajor": {
            "type": "integer",
            "example": "1"
          },
          "versionMinor": {
            "type": "integer",
            "example": "6"
          },
          "versionRev": {
            "type": "integer",
            "example": "4"
          }
        }
      },
      "Network": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "allowDNS": {
                "type": "boolean",
                "readOnly": false,
                "description": "Let ZeroTier modify the system's DNS settings",
                "example": false
              },
              "allowDefault": {
                "type": "boolean",
                "readOnly": false,
                "description": "Let ZeroTier to modify the system's default route.",
                "example": false
              },
              "allowGlobal": {
                "type": "boolean",
                "readOnly": false,
                "description": "Let ZeroTier to manage IP addresses and Route assignments that aren't in private ranges (rfc1918).",
                "example": false
              },
              "allowManaged": {
                "type": "boolean",
                "readOnly": false,
                "description": "Let ZeroTier to manage IP addresses and Route assignments.",
                "example": true
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "allowDNS": {
                "type": "boolean",
                "readOnly": false,
                "description": "Let ZeroTier modify the system's DNS settings"
              },
              "allowDefault": {
                "type": "boolean",
                "readOnly": false,
                "description": "Let ZeroTier to modify the system's default route."
              },
              "allowGlobal": {
                "type": "boolean",
                "readOnly": false,
                "description": "Let ZeroTier to manage IP addresses and Route assignments that aren't in private ranges (rfc1918)."
              },
              "allowManaged": {
                "type": "boolean",
                "readOnly": false,
                "description": "Let ZeroTier to manage IP addresses and Route assignments."
              },
              "assignedAddresses": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "10.147.20.190"
                }
              },
              "bridge": {
                "type": "boolean"
              },
              "broadcastEnabled": {
                "type": "boolean"
              },
              "dns": {
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string",
                    "example": "zt.example.com"
                  },
                  "servers": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "10.147.20.3"
                    }
                  }
                }
              },
              "id": {
                "type": "string",
                "example": "565799d8f620c5c5"
              },
              "mac": {
                "type": "string",
                "example": "e6:d2:2b:e6:68:73",
                "description": "MAC address for this network's interface"
              },
              "mtu": {
                "type": "integer",
                "example": "2800"
              },
              "multicastSubscriptions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "adi": {
                      "type": "integer",
                      "example": "0"
                    },
                    "mac": {
                      "type": "integer",
                      "example": "34:34:ff:da:6e:ff"
                    }
                  }
                }
              },
              "name": {
                "type": "string",
                "example": "clever_krum"
              },
              "netconfRevision": {
                "type": "integer",
                "example": "1234"
              },
              "portDeviceName": {
                "type": "string",
                "example": "ztnnhrtimp"
              },
              "portError": {
                "type": "number",
                "example": "0"
              },
              "routes": {
                "type": "array",
                "items": {
                  "properties": {
                    "flags": {
                      "type": "number",
                      "example": "0"
                    },
                    "metric": {
                      "type": "number",
                      "example": "0"
                    },
                    "target": {
                      "type": "string",
                      "example": "10.147.20.0/24"
                    },
                    "via": {
                      "type": "string",
                      "example": "192.168.168.5"
                    }
                  }
                }
              },
              "status": {
                "type": "string",
                "example": "OK"
              },
              "type": {
                "type": "string",
                "example": "PRIVATE"
              }
            }
          }
        ]
      },
      "Peer": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "992fcf1db7"
          },
          "isBonded": {
            "type": "boolean",
            "example": "false"
          },
          "latency": {
            "type": "integer",
            "example": "40"
          },
          "paths": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "active": {
                  "type": "boolean"
                },
                "address": {
                  "type": "string",
                  "example": "195.181.173.159/9993"
                },
                "expired": {
                  "type": "boolean",
                  "example": "false"
                },
                "lastReceive": {
                  "type": "integer",
                  "example": "1618955164580"
                },
                "lastSend": {
                  "type": "integer",
                  "example": "1618955164596"
                },
                "preferred": {
                  "type": "boolean",
                  "example": "true"
                },
                "trustedPathId": {
                  "type": "integer",
                  "example": "0"
                }
              }
            }
          },
          "role": {
            "type": "string",
            "example": "LEAF"
          },
          "version": {
            "type": "string",
            "example": "1.6.4"
          },
          "versionMajor": {
            "type": "integer",
            "example": "1"
          },
          "versionMinor": {
            "type": "integer",
            "example": "6"
          },
          "versionRev": {
            "type": "integer",
            "example": "4"
          }
        }
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
