---
kind: pipeline
type: docker
name: docs.zerotier.com

platform:
  arch: amd64
  os: linux

clone:
  depth: 1


steps:
- name: build
  image: 084037375216.dkr.ecr.us-east-2.amazonaws.com/central-builder
  commands:
  - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 084037375216.dkr.ecr.us-east-2.amazonaws.com
  - echo $${DOCKER_PASSWORD} | docker login --username $${DOCKER_LOGIN} --password-stdin registry.zerotier.com
  - cat ~/.docker/config.json
  - make docker
  - docker push registry.zerotier.com/zerotier/docs.zerotier.com:drone-${DRONE_BUILD_NUMBER}
  environment:
    DOCKER_LOGIN:
      from_secret: docker-registry-login
    DOCKER_PASSWORD:
      from_secret: docker-registry-password
- name: deploy
  image: 084037375216.dkr.ecr.us-east-2.amazonaws.com/central-builder
  depends_on:
  - build
  commands:
  - echo $${GCP_CREDENTIALS} > /tmp/gcp.json
  - cat /tmp/gcp.json
  - gcloud auth activate-service-account drone-ci@zerotier-central.iam.gserviceaccount.com --key-file /tmp/gcp.json --project zerotier-central
  - gcloud --project zerotier-central container clusters get-credentials ztc-controller-us-central --region us-central1
  # - kubectl set image deployment docs-zerotier-com docs-zerotier-com=registry.zerotier.com/zerotier/docs.zerotier.com:drone-${DRONE_BUILD_NUMBER}
  environment:
    GCP_CREDENTIALS:
      from_secret: gcp-k8s-creds
  when:
    branch:
    - master
- name: notify-mattermost
  pull: always
  image: 084037375216.dkr.ecr.us-east-2.amazonaws.com/mattermost-notify
  environment:
    token:
      from_secret: mattermost-token
    host:
      from_secret: mattermost-host
    channel:
      from_secret: mattermost-channel
    maxRetry: 3
  when:
    status:
    - failure
