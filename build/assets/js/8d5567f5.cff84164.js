(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{115:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return s}));var r=a(3),n=a(7),l=(a(0),a(156)),b={title:"ZT_Peer",custom_edit_url:null},i={unversionedId:"autogen/libztcore/classes/struct_z_t___peer",id:"autogen/libztcore/classes/struct_z_t___peer",isDocsHomePage:!1,title:"ZT_Peer",description:"More...",source:"@site/docs/autogen/libztcore/classes/struct_z_t___peer.md",sourceDirName:"autogen/libztcore/classes",slug:"/autogen/libztcore/classes/struct_z_t___peer",permalink:"/autogen/libztcore/classes/struct_z_t___peer",editUrl:null,version:"current",frontMatter:{title:"ZT_Peer",custom_edit_url:null}},c=[{value:"Public Attributes",id:"public-attributes",children:[]},{value:"Detailed Description",id:"detailed-description",children:[]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable address",id:"variable-address",children:[]},{value:"variable versionMajor",id:"variable-versionmajor",children:[]},{value:"variable versionMinor",id:"variable-versionminor",children:[]},{value:"variable versionRev",id:"variable-versionrev",children:[]},{value:"variable latency",id:"variable-latency",children:[]},{value:"variable role",id:"variable-role",children:[]},{value:"variable isBonded",id:"variable-isbonded",children:[]},{value:"variable bondingPolicy",id:"variable-bondingpolicy",children:[]},{value:"variable isHealthy",id:"variable-ishealthy",children:[]},{value:"variable numAliveLinks",id:"variable-numalivelinks",children:[]},{value:"variable numTotalLinks",id:"variable-numtotallinks",children:[]},{value:"variable customBondName",id:"variable-custombondname",children:[]},{value:"variable pathCount",id:"variable-pathcount",children:[]},{value:"variable paths",id:"variable-paths",children:[]}]}],o={toc:c};function s(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"#detailed-description"},"More...")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"#include <ZeroTierOne.h>")),Object(l.b)("h2",{id:"public-attributes"},"Public Attributes"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null}),Object(l.b)("th",{parentName:"tr",align:null},"Name"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"uint64_t"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___peer#variable-address"},"address")))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"int"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___peer#variable-versionmajor"},"versionMajor")))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"int"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___peer#variable-versionminor"},"versionMinor")))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"int"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___peer#variable-versionrev"},"versionRev")))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"int"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___peer#variable-latency"},"latency")))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"enum ZT_PeerRole"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___peer#variable-role"},"role")))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"bool"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___peer#variable-isbonded"},"isBonded")))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"int"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___peer#variable-bondingpolicy"},"bondingPolicy")))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"bool"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___peer#variable-ishealthy"},"isHealthy")))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"int"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___peer#variable-numalivelinks"},"numAliveLinks")))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"int"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___peer#variable-numtotallinks"},"numTotalLinks")))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"char"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___peer#variable-custombondname"},"customBondName")))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"unsigned int"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___peer#variable-pathcount"},"pathCount")))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"/autogen/libztcore/classes/struct_z_t___peer_physical_path"},"ZT_PeerPhysicalPath")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("strong",{parentName:"td"},Object(l.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___peer#variable-paths"},"paths")))))),Object(l.b)("h2",{id:"detailed-description"},"Detailed Description"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"struct ZT_Peer;\n")),Object(l.b)("p",null,"Peer status result buffer "),Object(l.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(l.b)("h3",{id:"variable-address"},"variable address"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"uint64_t address;\n")),Object(l.b)("p",null,"ZeroTier address (40 bits) "),Object(l.b)("h3",{id:"variable-versionmajor"},"variable versionMajor"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int versionMajor;\n")),Object(l.b)("p",null,"Remote major version or -1 if not known "),Object(l.b)("h3",{id:"variable-versionminor"},"variable versionMinor"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int versionMinor;\n")),Object(l.b)("p",null,"Remote minor version or -1 if not known "),Object(l.b)("h3",{id:"variable-versionrev"},"variable versionRev"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int versionRev;\n")),Object(l.b)("p",null,"Remote revision or -1 if not known "),Object(l.b)("h3",{id:"variable-latency"},"variable latency"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int latency;\n")),Object(l.b)("p",null,"Last measured latency in milliseconds or -1 if unknown "),Object(l.b)("h3",{id:"variable-role"},"variable role"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"enum ZT_PeerRole role;\n")),Object(l.b)("p",null,"What trust hierarchy role does this device have? "),Object(l.b)("h3",{id:"variable-isbonded"},"variable isBonded"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"bool isBonded;\n")),Object(l.b)("p",null,"Whether a multi-link bond has formed "),Object(l.b)("h3",{id:"variable-bondingpolicy"},"variable bondingPolicy"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int bondingPolicy;\n")),Object(l.b)("p",null,"The bonding policy used to bond to this peer "),Object(l.b)("h3",{id:"variable-ishealthy"},"variable isHealthy"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"bool isHealthy;\n")),Object(l.b)("p",null,"The health status of the bond to this peer "),Object(l.b)("h3",{id:"variable-numalivelinks"},"variable numAliveLinks"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int numAliveLinks;\n")),Object(l.b)("p",null,"The number of links that comprise the bond to this peer that are considered alive "),Object(l.b)("h3",{id:"variable-numtotallinks"},"variable numTotalLinks"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"int numTotalLinks;\n")),Object(l.b)("p",null,"The number of links that comprise the bond to this peer "),Object(l.b)("h3",{id:"variable-custombondname"},"variable customBondName"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"char customBondName;\n")),Object(l.b)("p",null,"The user-specified bond template name "),Object(l.b)("h3",{id:"variable-pathcount"},"variable pathCount"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"unsigned int pathCount;\n")),Object(l.b)("p",null,"Number of paths (size of paths[]) "),Object(l.b)("h3",{id:"variable-paths"},"variable paths"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-cpp"},"ZT_PeerPhysicalPath paths;\n")),Object(l.b)("p",null,"Known network paths to peer "),Object(l.b)("hr",null),Object(l.b)("p",null,"Updated on 22 April 2021 at 15:16:44 PDT"))}s.isMDXComponent=!0},156:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var r=a(0),n=a.n(r);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=n.a.createContext({}),s=function(e){var t=n.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return n.a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,b=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),p=s(a),d=r,m=p["".concat(b,".").concat(d)]||p[d]||u[d]||l;return a?n.a.createElement(m,i(i({ref:t},o),{},{components:a})):n.a.createElement(m,i({ref:t},o))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,b=new Array(l);b[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,b[1]=i;for(var o=2;o<l;o++)b[o]=a[o];return n.a.createElement.apply(null,b)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);