(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{129:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return p}));var r=a(3),l=a(7),n=(a(0),a(156)),b={title:"ZT_VirtualNetworkRule",custom_edit_url:null},i={unversionedId:"autogen/libztcore/classes/struct_z_t___virtual_network_rule",id:"autogen/libztcore/classes/struct_z_t___virtual_network_rule",isDocsHomePage:!1,title:"ZT_VirtualNetworkRule",description:"More...",source:"@site/docs/autogen/libztcore/classes/struct_z_t___virtual_network_rule.md",sourceDirName:"autogen/libztcore/classes",slug:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule",permalink:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule",editUrl:null,version:"current",frontMatter:{title:"ZT_VirtualNetworkRule",custom_edit_url:null}},c=[{value:"Public Attributes",id:"public-attributes",children:[]},{value:"Detailed Description",id:"detailed-description",children:[]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable t",id:"variable-t",children:[]},{value:"variable ip",id:"variable-ip",children:[]},{value:"variable mask",id:"variable-mask",children:[]},{value:"variable ipv6",id:"variable-ipv6",children:[]},{value:"variable ip",id:"variable-ip-1",children:[]},{value:"variable ipv4",id:"variable-ipv4",children:[]},{value:"variable start",id:"variable-start",children:[]},{value:"variable end",id:"variable-end",children:[]},{value:"variable idx",id:"variable-idx",children:[]},{value:"variable format",id:"variable-format",children:[]},{value:"variable intRange",id:"variable-intrange",children:[]},{value:"variable characteristics",id:"variable-characteristics",children:[]},{value:"variable port",id:"variable-port",children:[]},{value:"variable zt",id:"variable-zt",children:[]},{value:"variable randomProbability",id:"variable-randomprobability",children:[]},{value:"variable mac",id:"variable-mac",children:[]},{value:"variable vlanId",id:"variable-vlanid",children:[]},{value:"variable vlanPcp",id:"variable-vlanpcp",children:[]},{value:"variable vlanDei",id:"variable-vlandei",children:[]},{value:"variable etherType",id:"variable-ethertype",children:[]},{value:"variable ipProtocol",id:"variable-ipprotocol",children:[]},{value:"variable value",id:"variable-value",children:[]},{value:"variable ipTos",id:"variable-iptos",children:[]},{value:"variable frameSize",id:"variable-framesize",children:[]},{value:"variable type",id:"variable-type",children:[]},{value:"variable code",id:"variable-code",children:[]},{value:"variable flags",id:"variable-flags",children:[]},{value:"variable icmp",id:"variable-icmp",children:[]},{value:"variable id",id:"variable-id",children:[]},{value:"variable value",id:"variable-value-1",children:[]},{value:"variable tag",id:"variable-tag",children:[]},{value:"variable address",id:"variable-address",children:[]},{value:"variable flags",id:"variable-flags-1",children:[]},{value:"variable length",id:"variable-length",children:[]},{value:"variable fwd",id:"variable-fwd",children:[]},{value:"variable qosBucket",id:"variable-qosbucket",children:[]},{value:"variable v",id:"variable-v",children:[]}]}],u={toc:c};function p(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(n.b)("wrapper",Object(r.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"#detailed-description"},"More...")),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"#include <ZeroTierOne.h>")),Object(n.b)("h2",{id:"public-attributes"},"Public Attributes"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",{parentName:"tr",align:null}),Object(n.b)("th",{parentName:"tr",align:null},"Name"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint8_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-t"},"t")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint8_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-ip"},"ip")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint8_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-mask"},"mask")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"struct ZT_VirtualNetworkRule::@0::@1"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-ipv6"},"ipv6")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint32_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-ip"},"ip")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"struct ZT_VirtualNetworkRule::@0::@2"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-ipv4"},"ipv4")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint64_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-start"},"start")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint32_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-end"},"end")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint16_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-idx"},"idx")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint8_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-format"},"format")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"struct ZT_VirtualNetworkRule::@0::@3"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-intrange"},"intRange")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint64_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-characteristics"},"characteristics")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint16_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-port"},"port")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint64_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-zt"},"zt")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint32_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-randomprobability"},"randomProbability")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint8_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-mac"},"mac")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint16_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-vlanid"},"vlanId")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint8_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-vlanpcp"},"vlanPcp")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint8_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-vlandei"},"vlanDei")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint16_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-ethertype"},"etherType")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint8_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-ipprotocol"},"ipProtocol")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint8_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-value"},"value")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"struct ZT_VirtualNetworkRule::@0::@4"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-iptos"},"ipTos")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint16_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-framesize"},"frameSize")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint8_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-type"},"type")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint8_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-code"},"code")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint8_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-flags"},"flags")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"struct ZT_VirtualNetworkRule::@0::@5"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-icmp"},"icmp")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint32_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-id"},"id")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint32_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-value"},"value")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"struct ZT_VirtualNetworkRule::@0::@6"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-tag"},"tag")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint64_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-address"},"address")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint32_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-flags"},"flags")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint16_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-length"},"length")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"struct ZT_VirtualNetworkRule::@0::@7"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-fwd"},"fwd")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"uint8_t"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-qosbucket"},"qosBucket")))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"union ZT_VirtualNetworkRule::@0"),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("strong",{parentName:"td"},Object(n.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_rule#variable-v"},"v")))))),Object(n.b)("h2",{id:"detailed-description"},"Detailed Description"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"struct ZT_VirtualNetworkRule;\n")),Object(n.b)("p",null,"Network flow rule"),Object(n.b)("p",null,"Rules are stored in a table in which one or more match entries is followed by an action. If more than one match precedes an action, the rule is the AND of all matches. An action with no match is always taken since it matches anything. If nothing matches, the default action is DROP."),Object(n.b)("p",null,"This is designed to be a more memory-efficient way of storing rules than a wide table, yet still fast and simple to access in code. "),Object(n.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(n.b)("h3",{id:"variable-t"},"variable t"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint8_t t;\n")),Object(n.b)("p",null,"Type and flags"),Object(n.b)("p",null,"Bits are: NOTTTTTT"),Object(n.b)("p",null,"N - If true, sense of match is inverted (no effect on actions) O - If true, result is ORed with previous instead of ANDed (no effect on actions) T - Rule or action type"),Object(n.b)("p",null,"AND with 0x3f to get type, 0x80 to get NOT bit, and 0x40 to get OR bit. "),Object(n.b)("h3",{id:"variable-ip"},"variable ip"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint8_t ip;\n")),Object(n.b)("h3",{id:"variable-mask"},"variable mask"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint8_t mask;\n")),Object(n.b)("h3",{id:"variable-ipv6"},"variable ipv6"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"struct ZT_VirtualNetworkRule::@0::@1 ipv6;\n")),Object(n.b)("p",null,"IPv6 address in big-endian / network byte order and netmask bits "),Object(n.b)("h3",{id:"variable-ip-1"},"variable ip"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint32_t ip;\n")),Object(n.b)("h3",{id:"variable-ipv4"},"variable ipv4"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"struct ZT_VirtualNetworkRule::@0::@2 ipv4;\n")),Object(n.b)("p",null,"IPv4 address in big-endian / network byte order "),Object(n.b)("h3",{id:"variable-start"},"variable start"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint64_t start;\n")),Object(n.b)("h3",{id:"variable-end"},"variable end"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint32_t end;\n")),Object(n.b)("h3",{id:"variable-idx"},"variable idx"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint16_t idx;\n")),Object(n.b)("h3",{id:"variable-format"},"variable format"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint8_t format;\n")),Object(n.b)("h3",{id:"variable-intrange"},"variable intRange"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"struct ZT_VirtualNetworkRule::@0::@3 intRange;\n")),Object(n.b)("p",null,"Integer range match in packet payload"),Object(n.b)("p",null,"This allows matching of ranges of integers up to 64 bits wide where the range is +/- INT32_MAX. It's packed this way so it fits in 16 bytes and doesn't enlarge the overall size of this union. "),Object(n.b)("h3",{id:"variable-characteristics"},"variable characteristics"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint64_t characteristics;\n")),Object(n.b)("p",null,"Packet characteristic flags being matched "),Object(n.b)("h3",{id:"variable-port"},"variable port"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint16_t port;\n")),Object(n.b)("p",null,"IP port range ","\u2013"," start-end inclusive ","\u2013"," host byte order "),Object(n.b)("h3",{id:"variable-zt"},"variable zt"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint64_t zt;\n")),Object(n.b)("p",null,"40-bit ZeroTier address (in least significant bits, host byte order) "),Object(n.b)("h3",{id:"variable-randomprobability"},"variable randomProbability"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint32_t randomProbability;\n")),Object(n.b)("p",null,"0 = never, UINT32_MAX = always "),Object(n.b)("h3",{id:"variable-mac"},"variable mac"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint8_t mac;\n")),Object(n.b)("p",null,"48-bit Ethernet MAC address in big-endian order "),Object(n.b)("h3",{id:"variable-vlanid"},"variable vlanId"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint16_t vlanId;\n")),Object(n.b)("p",null,"VLAN ID in host byte order "),Object(n.b)("h3",{id:"variable-vlanpcp"},"variable vlanPcp"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint8_t vlanPcp;\n")),Object(n.b)("p",null,"VLAN PCP (least significant 3 bits) "),Object(n.b)("h3",{id:"variable-vlandei"},"variable vlanDei"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint8_t vlanDei;\n")),Object(n.b)("p",null,"VLAN DEI (single bit / boolean) "),Object(n.b)("h3",{id:"variable-ethertype"},"variable etherType"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint16_t etherType;\n")),Object(n.b)("p",null,"Ethernet type in host byte order "),Object(n.b)("h3",{id:"variable-ipprotocol"},"variable ipProtocol"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint8_t ipProtocol;\n")),Object(n.b)("p",null,"IP protocol "),Object(n.b)("h3",{id:"variable-value"},"variable value"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint8_t value;\n")),Object(n.b)("h3",{id:"variable-iptos"},"variable ipTos"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"struct ZT_VirtualNetworkRule::@0::@4 ipTos;\n")),Object(n.b)("p",null,"IP type of service a.k.a. DSCP field "),Object(n.b)("h3",{id:"variable-framesize"},"variable frameSize"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint16_t frameSize;\n")),Object(n.b)("p",null,"Ethernet packet size in host byte order (start-end, inclusive) "),Object(n.b)("h3",{id:"variable-type"},"variable type"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint8_t type;\n")),Object(n.b)("h3",{id:"variable-code"},"variable code"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint8_t code;\n")),Object(n.b)("h3",{id:"variable-flags"},"variable flags"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint8_t flags;\n")),Object(n.b)("h3",{id:"variable-icmp"},"variable icmp"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"struct ZT_VirtualNetworkRule::@0::@5 icmp;\n")),Object(n.b)("p",null,"ICMP type and code "),Object(n.b)("h3",{id:"variable-id"},"variable id"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint32_t id;\n")),Object(n.b)("h3",{id:"variable-value-1"},"variable value"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint32_t value;\n")),Object(n.b)("h3",{id:"variable-tag"},"variable tag"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"struct ZT_VirtualNetworkRule::@0::@6 tag;\n")),Object(n.b)("p",null,"For tag-related rules "),Object(n.b)("h3",{id:"variable-address"},"variable address"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint64_t address;\n")),Object(n.b)("h3",{id:"variable-flags-1"},"variable flags"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint32_t flags;\n")),Object(n.b)("h3",{id:"variable-length"},"variable length"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint16_t length;\n")),Object(n.b)("h3",{id:"variable-fwd"},"variable fwd"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"struct ZT_VirtualNetworkRule::@0::@7 fwd;\n")),Object(n.b)("p",null,"Destinations for TEE and REDIRECT "),Object(n.b)("h3",{id:"variable-qosbucket"},"variable qosBucket"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"uint8_t qosBucket;\n")),Object(n.b)("p",null,"Quality of Service (QoS) bucket we want a frame to be placed in "),Object(n.b)("h3",{id:"variable-v"},"variable v"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-cpp"},"union ZT_VirtualNetworkRule::@0 v;\n")),Object(n.b)("p",null,"Union containing the value of this rule ","\u2013"," which field is used depends on 't' "),Object(n.b)("hr",null),Object(n.b)("p",null,"Updated on 22 April 2021 at 15:16:44 PDT"))}p.isMDXComponent=!0},156:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a.d(t,"b",(function(){return O}));var r=a(0),l=a.n(r);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,l=function(e,t){if(null==e)return{};var a,r,l={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var u=l.a.createContext({}),p=function(e){var t=l.a.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},o=function(e){var t=p(e.components);return l.a.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},d=l.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,b=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),o=p(a),d=r,O=o["".concat(b,".").concat(d)]||o[d]||s[d]||n;return a?l.a.createElement(O,i(i({ref:t},u),{},{components:a})):l.a.createElement(O,i({ref:t},u))}));function O(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,b=new Array(n);b[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,b[1]=i;for(var u=2;u<n;u++)b[u]=a[u];return l.a.createElement.apply(null,b)}return l.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);