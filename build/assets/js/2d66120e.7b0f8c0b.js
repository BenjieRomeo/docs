(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{156:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=a.a.createContext({}),u=function(e){var t=a.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return a.a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),s=u(n),d=r,f=s["".concat(c,".").concat(d)]||s[d]||p[d]||i;return n?a.a.createElement(f,l(l({ref:t},o),{},{components:n})):a.a.createElement(f,l({ref:t},o))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=d;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var o=2;o<i;o++)c[o]=n[o];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},86:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),i=(n(0),n(156)),c={title:"zts_netif_info_t",custom_edit_url:null},l={unversionedId:"autogen/libzt/classes/structzts__netif__info__t",id:"autogen/libzt/classes/structzts__netif__info__t",isDocsHomePage:!1,title:"zts_netif_info_t",description:"More...",source:"@site/docs/autogen/libzt/classes/structzts__netif__info__t.md",sourceDirName:"autogen/libzt/classes",slug:"/autogen/libzt/classes/structzts__netif__info__t",permalink:"/autogen/libzt/classes/structzts__netif__info__t",editUrl:null,version:"current",frontMatter:{title:"zts_netif_info_t",custom_edit_url:null}},b=[{value:"Public Attributes",id:"public-attributes",children:[]},{value:"Detailed Description",id:"detailed-description",children:[]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable net_id",id:"variable-net_id",children:[]},{value:"variable mac",id:"variable-mac",children:[]},{value:"variable mtu",id:"variable-mtu",children:[]}]}],o={toc:b};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"#detailed-description"},"More...")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"#include <ZeroTierSockets.h>")),Object(i.b)("h2",{id:"public-attributes"},"Public Attributes"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null}),Object(i.b)("th",{parentName:"tr",align:null},"Name"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"uint64_t"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/autogen/libzt/classes/structzts__netif__info__t#variable-net_id"},"net_id")))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"uint64_t"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/autogen/libzt/classes/structzts__netif__info__t#variable-mac"},"mac")))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"int"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("strong",{parentName:"td"},Object(i.b)("a",{parentName:"strong",href:"/autogen/libzt/classes/structzts__netif__info__t#variable-mtu"},"mtu")))))),Object(i.b)("h2",{id:"detailed-description"},"Detailed Description"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"struct zts_netif_info_t;\n")),Object(i.b)("p",null,"A structure used to convey information about a virtual network interface (netif) to a user application. "),Object(i.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(i.b)("h3",{id:"variable-net_id"},"variable net_id"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"uint64_t net_id;\n")),Object(i.b)("p",null,"The virtual network that this interface was created for "),Object(i.b)("h3",{id:"variable-mac"},"variable mac"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"uint64_t mac;\n")),Object(i.b)("p",null,"The hardware address assigned to this interface "),Object(i.b)("h3",{id:"variable-mtu"},"variable mtu"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-cpp"},"int mtu;\n")),Object(i.b)("p",null,"The MTU for this interface "),Object(i.b)("hr",null),Object(i.b)("p",null,"Updated on 22 April 2021 at 15:16:44 PDT"))}u.isMDXComponent=!0}}]);