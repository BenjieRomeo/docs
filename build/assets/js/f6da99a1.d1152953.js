(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{151:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return o}));var r=a(3),n=a(7),b=(a(0),a(156)),i={title:"ZT_VirtualNetworkConfig",custom_edit_url:null},l={unversionedId:"autogen/libztcore/classes/struct_z_t___virtual_network_config",id:"autogen/libztcore/classes/struct_z_t___virtual_network_config",isDocsHomePage:!1,title:"ZT_VirtualNetworkConfig",description:"More...",source:"@site/docs/autogen/libztcore/classes/struct_z_t___virtual_network_config.md",sourceDirName:"autogen/libztcore/classes",slug:"/autogen/libztcore/classes/struct_z_t___virtual_network_config",permalink:"/autogen/libztcore/classes/struct_z_t___virtual_network_config",editUrl:null,version:"current",frontMatter:{title:"ZT_VirtualNetworkConfig",custom_edit_url:null}},c=[{value:"Public Attributes",id:"public-attributes",children:[]},{value:"Detailed Description",id:"detailed-description",children:[]},{value:"Public Attributes Documentation",id:"public-attributes-documentation",children:[{value:"variable nwid",id:"variable-nwid",children:[]},{value:"variable mac",id:"variable-mac",children:[]},{value:"variable name",id:"variable-name",children:[]},{value:"variable status",id:"variable-status",children:[]},{value:"variable type",id:"variable-type",children:[]},{value:"variable mtu",id:"variable-mtu",children:[]},{value:"variable dhcp",id:"variable-dhcp",children:[]},{value:"variable bridge",id:"variable-bridge",children:[]},{value:"variable broadcastEnabled",id:"variable-broadcastenabled",children:[]},{value:"variable portError",id:"variable-porterror",children:[]},{value:"variable netconfRevision",id:"variable-netconfrevision",children:[]},{value:"variable assignedAddressCount",id:"variable-assignedaddresscount",children:[]},{value:"variable assignedAddresses",id:"variable-assignedaddresses",children:[]},{value:"variable routeCount",id:"variable-routecount",children:[]},{value:"variable routes",id:"variable-routes",children:[]},{value:"variable multicastSubscriptionCount",id:"variable-multicastsubscriptioncount",children:[]},{value:"variable adi",id:"variable-adi",children:[]},{value:"variable multicastSubscriptions",id:"variable-multicastsubscriptions",children:[]},{value:"variable dns",id:"variable-dns",children:[]}]}],s={toc:c};function o(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(b.b)("wrapper",Object(r.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,Object(b.b)("a",{parentName:"p",href:"#detailed-description"},"More...")),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"#include <ZeroTierOne.h>")),Object(b.b)("h2",{id:"public-attributes"},"Public Attributes"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null}),Object(b.b)("th",{parentName:"tr",align:null},"Name"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"uint64_t"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-nwid"},"nwid")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"uint64_t"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-mac"},"mac")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"char"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-name"},"name")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"enum ZT_VirtualNetworkStatus"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-status"},"status")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"enum ZT_VirtualNetworkType"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-type"},"type")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"unsigned int"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-mtu"},"mtu")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"int"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-dhcp"},"dhcp")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"int"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-bridge"},"bridge")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"int"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-broadcastenabled"},"broadcastEnabled")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"int"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-porterror"},"portError")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"unsigned long"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-netconfrevision"},"netconfRevision")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"unsigned int"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-assignedaddresscount"},"assignedAddressCount")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"struct sockaddr_storage"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-assignedaddresses"},"assignedAddresses")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"unsigned int"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-routecount"},"routeCount")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_route"},"ZT_VirtualNetworkRoute")),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-routes"},"routes")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"unsigned int"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-multicastsubscriptioncount"},"multicastSubscriptionCount")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"uint32_t"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-adi"},"adi")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"struct ZT_VirtualNetworkConfig::@8"),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-multicastsubscriptions"},"multicastSubscriptions")))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_d_n_s"},"ZT_VirtualNetworkDNS")),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("strong",{parentName:"td"},Object(b.b)("a",{parentName:"strong",href:"/autogen/libztcore/classes/struct_z_t___virtual_network_config#variable-dns"},"dns")))))),Object(b.b)("h2",{id:"detailed-description"},"Detailed Description"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"struct ZT_VirtualNetworkConfig;\n")),Object(b.b)("p",null,"Virtual network configuration "),Object(b.b)("h2",{id:"public-attributes-documentation"},"Public Attributes Documentation"),Object(b.b)("h3",{id:"variable-nwid"},"variable nwid"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"uint64_t nwid;\n")),Object(b.b)("p",null,"64-bit ZeroTier network ID "),Object(b.b)("h3",{id:"variable-mac"},"variable mac"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"uint64_t mac;\n")),Object(b.b)("p",null,"Ethernet MAC (48 bits) that should be assigned to port "),Object(b.b)("h3",{id:"variable-name"},"variable name"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"char name;\n")),Object(b.b)("p",null,"Network name (from network configuration master) "),Object(b.b)("h3",{id:"variable-status"},"variable status"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"enum ZT_VirtualNetworkStatus status;\n")),Object(b.b)("p",null,"Network configuration request status "),Object(b.b)("h3",{id:"variable-type"},"variable type"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"enum ZT_VirtualNetworkType type;\n")),Object(b.b)("p",null,"Network type "),Object(b.b)("h3",{id:"variable-mtu"},"variable mtu"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"unsigned int mtu;\n")),Object(b.b)("p",null,"Maximum interface MTU "),Object(b.b)("h3",{id:"variable-dhcp"},"variable dhcp"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"int dhcp;\n")),Object(b.b)("p",null,"If nonzero, the network this port belongs to indicates DHCP availability"),Object(b.b)("p",null,"This is a suggestion. The underlying implementation is free to ignore it for security or other reasons. This is simply a netconf parameter that means 'DHCP is available on this network.' "),Object(b.b)("h3",{id:"variable-bridge"},"variable bridge"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"int bridge;\n")),Object(b.b)("p",null,"If nonzero, this port is allowed to bridge to other networks"),Object(b.b)("p",null,"This is informational. If this is false (0), bridged packets will simply be dropped and bridging won't work. "),Object(b.b)("h3",{id:"variable-broadcastenabled"},"variable broadcastEnabled"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"int broadcastEnabled;\n")),Object(b.b)("p",null,"If nonzero, this network supports and allows broadcast (ff:ff:ff:ff:ff:ff) traffic "),Object(b.b)("h3",{id:"variable-porterror"},"variable portError"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"int portError;\n")),Object(b.b)("p",null,"If the network is in PORT_ERROR state, this is the (negative) error code most recently reported "),Object(b.b)("h3",{id:"variable-netconfrevision"},"variable netconfRevision"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"unsigned long netconfRevision;\n")),Object(b.b)("p",null,"Revision number as reported by controller or 0 if still waiting for config "),Object(b.b)("h3",{id:"variable-assignedaddresscount"},"variable assignedAddressCount"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"unsigned int assignedAddressCount;\n")),Object(b.b)("p",null,"Number of assigned addresses "),Object(b.b)("h3",{id:"variable-assignedaddresses"},"variable assignedAddresses"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"struct sockaddr_storage assignedAddresses;\n")),Object(b.b)("p",null,"ZeroTier-assigned addresses (in sockaddr_storage structures)"),Object(b.b)("p",null,"For IP, the port number of the sockaddr_XX structure contains the number of bits in the address netmask. Only the IP address and port are used. Other fields like interface number can be ignored."),Object(b.b)("p",null,"This is only used for ZeroTier-managed address assignments sent by the virtual network's configuration master. "),Object(b.b)("h3",{id:"variable-routecount"},"variable routeCount"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"unsigned int routeCount;\n")),Object(b.b)("p",null,"Number of ZT-pushed routes "),Object(b.b)("h3",{id:"variable-routes"},"variable routes"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"ZT_VirtualNetworkRoute routes;\n")),Object(b.b)("p",null,"Routes (excluding those implied by assigned addresses and their masks) "),Object(b.b)("h3",{id:"variable-multicastsubscriptioncount"},"variable multicastSubscriptionCount"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"unsigned int multicastSubscriptionCount;\n")),Object(b.b)("p",null,"Number of multicast groups subscribed "),Object(b.b)("h3",{id:"variable-adi"},"variable adi"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"uint32_t adi;\n")),Object(b.b)("h3",{id:"variable-multicastsubscriptions"},"variable multicastSubscriptions"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"struct ZT_VirtualNetworkConfig::@8 multicastSubscriptions;\n")),Object(b.b)("p",null,"Multicast groups to which this network's device is subscribed "),Object(b.b)("h3",{id:"variable-dns"},"variable dns"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-cpp"},"ZT_VirtualNetworkDNS dns;\n")),Object(b.b)("p",null,"Network specific DNS configuration "),Object(b.b)("hr",null),Object(b.b)("p",null,"Updated on 22 April 2021 at 15:16:44 PDT"))}o.isMDXComponent=!0},156:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return g}));var r=a(0),n=a.n(r);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},b=Object.keys(e);for(r=0;r<b.length;r++)a=b[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(r=0;r<b.length;r++)a=b[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=n.a.createContext({}),o=function(e){var t=n.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=o(e.components);return n.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},p=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,b=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=o(a),p=r,g=u["".concat(i,".").concat(p)]||u[p]||d[p]||b;return a?n.a.createElement(g,l(l({ref:t},s),{},{components:a})):n.a.createElement(g,l({ref:t},s))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var b=a.length,i=new Array(b);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<b;s++)i[s]=a[s];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);